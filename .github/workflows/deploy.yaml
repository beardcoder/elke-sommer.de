name: deploy

on: push

# It is important to specify "concurrency" for the workflow,
# to prevent concurrency between different deploys.
concurrency: production_environment

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: /tmp/composer-cache
          key: "${{ runner.os }}-${{ hashFiles('**/composer.lock') }}"
      - name: Install dependencies
        uses: php-actions/composer@v6
        with:
          dev: no
          args: --no-progress --no-interaction --optimize-autoloader --no-progress --ignore-platform-reqs

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build

      - name: Deploy to server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          SOURCE: "./"
          REMOTE_HOST: viking.user.space
          REMOTE_USER: viking
          TARGET: /home/viking/html/elke-sommer.de
          EXCLUDE: ".env, .github, .git, .ddev, node_modules, storage, .env, DOCKER_ENV, output.log, Dockerfile-php-build, docker_tag"
          SCRIPT_AFTER: |
            cd /home/viking/html/elke-sommer.de
            php artisan optimize:clear
            php artisan view:cache
            php artisan config:cache
            php artisan route:cache
            php artisan event:cache
            php artisan migrate --force
            php artisan responsecache:clear
